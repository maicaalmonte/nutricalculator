{"ast":null,"code":"// Function to fetch data from the Flask server\nfunction fetchData(){const page=document.getElementById('page').value;const limit=document.getElementById('limit').value;const language=document.getElementById('language')?document.getElementById('language').value:'en';// Ensure language is passed\nconst status=document.getElementById('status');const dataTable=document.getElementById('data-table').getElementsByTagName('tbody')[0];// Show loading status\nstatus.textContent='Loading...';// Make AJAX request to Flask server\nconst formData=new FormData();formData.append('page',page);formData.append('limit',limit);formData.append('language',language);fetch('/fetch_data',{method:'POST',body:formData}).then(response=>response.json()).then(data=>{if(data.status==='success'){const products=data.data;updateTable(products);status.textContent='';}else{status.textContent='Error: '+data.message;}}).catch(error=>{console.error('Error:',error);status.textContent='An error occurred while fetching the data.';});}// Function to update the data table\nfunction updateTable(products){const dataTable=document.getElementById('data-table').getElementsByTagName('tbody')[0];dataTable.innerHTML='';// Clear existing data in the table\nproducts.forEach(product=>{const row=dataTable.insertRow();const productNameCell=row.insertCell(0);const brandCell=row.insertCell(1);const ingredientsCell=row.insertCell(2);const quantityCell=row.insertCell(3);const codeCell=row.insertCell(4);const energyCell=row.insertCell(5);const fatCell=row.insertCell(6);const carbsCell=row.insertCell(7);const sugarsCell=row.insertCell(8);const proteinsCell=row.insertCell(9);const saltCell=row.insertCell(10);const fiberCell=row.insertCell(11);const vitACell=row.insertCell(12);const vitCCell=row.insertCell(13);const calciumCell=row.insertCell(14);const ironCell=row.insertCell(15);const magnesiumCell=row.insertCell(16);const potassiumCell=row.insertCell(17);// Fill in the row with data\nproductNameCell.textContent=product.product_name;brandCell.textContent=product.brands;ingredientsCell.textContent=product.ingredients_text;quantityCell.textContent=product.quantity;codeCell.textContent=product.code;energyCell.textContent=product['energy-kcal_100g'];fatCell.textContent=product['fat_100g'];carbsCell.textContent=product['carbohydrates_100g'];sugarsCell.textContent=product['sugars_100g'];proteinsCell.textContent=product['proteins_100g'];saltCell.textContent=product['salt_100g'];fiberCell.textContent=product['fiber_100g'];vitACell.textContent=product['vitamin-a_100g'];vitCCell.textContent=product['vitamin-c_100g'];calciumCell.textContent=product['calcium_100g'];ironCell.textContent=product['iron_100g'];magnesiumCell.textContent=product['magnesium_100g'];potassiumCell.textContent=product['potassium_100g'];});}// Function to fetch news articles from the Flask server\nfunction fetchNews(){const newsArticlesDiv=document.getElementById('news-articles');newsArticlesDiv.innerHTML='<p>Loading news...</p>';// Show loading text\nfetch('/fetch_news').then(response=>response.json()).then(data=>{if(data.status==='success'){const articles=data.articles;updateNews(articles);}else{newsArticlesDiv.innerHTML='Error: '+data.message;}}).catch(error=>{console.error('Error:',error);newsArticlesDiv.innerHTML='An error occurred while fetching news.';});}// Function to update the news section\nfunction updateNews(articles){const newsArticlesDiv=document.getElementById('news-articles');newsArticlesDiv.innerHTML='';// Clear existing news\narticles.forEach(article=>{const articleDiv=document.createElement('div');articleDiv.classList.add('news-article');const title=document.createElement('h3');title.textContent=article.title;articleDiv.appendChild(title);const description=document.createElement('p');description.textContent=article.description||'No description available.';articleDiv.appendChild(description);newsArticlesDiv.appendChild(articleDiv);});}// Call fetchNews() once to load initial news\nfetchNews();","map":{"version":3,"names":["fetchData","page","document","getElementById","value","limit","language","status","dataTable","getElementsByTagName","textContent","formData","FormData","append","fetch","method","body","then","response","json","data","products","updateTable","message","catch","error","console","innerHTML","forEach","product","row","insertRow","productNameCell","insertCell","brandCell","ingredientsCell","quantityCell","codeCell","energyCell","fatCell","carbsCell","sugarsCell","proteinsCell","saltCell","fiberCell","vitACell","vitCCell","calciumCell","ironCell","magnesiumCell","potassiumCell","product_name","brands","ingredients_text","quantity","code","fetchNews","newsArticlesDiv","articles","updateNews","article","articleDiv","createElement","classList","add","title","appendChild","description"],"sources":["C:/Users/jamai/PycharmProjects/nutricalculator/src/index.js"],"sourcesContent":["// Function to fetch data from the Flask server\r\nfunction fetchData() {\r\n    const page = document.getElementById('page').value;\r\n    const limit = document.getElementById('limit').value;\r\n    const language = document.getElementById('language') ? document.getElementById('language').value : 'en';  // Ensure language is passed\r\n\r\n    const status = document.getElementById('status');\r\n    const dataTable = document.getElementById('data-table').getElementsByTagName('tbody')[0];\r\n\r\n    // Show loading status\r\n    status.textContent = 'Loading...';\r\n\r\n    // Make AJAX request to Flask server\r\n    const formData = new FormData();\r\n    formData.append('page', page);\r\n    formData.append('limit', limit);\r\n    formData.append('language', language);\r\n\r\n    fetch('/fetch_data', {\r\n        method: 'POST',\r\n        body: formData\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        if (data.status === 'success') {\r\n            const products = data.data;\r\n            updateTable(products);\r\n            status.textContent = '';\r\n        } else {\r\n            status.textContent = 'Error: ' + data.message;\r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.error('Error:', error);\r\n        status.textContent = 'An error occurred while fetching the data.';\r\n    });\r\n}\r\n\r\n// Function to update the data table\r\nfunction updateTable(products) {\r\n    const dataTable = document.getElementById('data-table').getElementsByTagName('tbody')[0];\r\n    dataTable.innerHTML = '';  // Clear existing data in the table\r\n\r\n    products.forEach(product => {\r\n        const row = dataTable.insertRow();\r\n\r\n        const productNameCell = row.insertCell(0);\r\n        const brandCell = row.insertCell(1);\r\n        const ingredientsCell = row.insertCell(2);\r\n        const quantityCell = row.insertCell(3);\r\n        const codeCell = row.insertCell(4);\r\n        const energyCell = row.insertCell(5);\r\n        const fatCell = row.insertCell(6);\r\n        const carbsCell = row.insertCell(7);\r\n        const sugarsCell = row.insertCell(8);\r\n        const proteinsCell = row.insertCell(9);\r\n        const saltCell = row.insertCell(10);\r\n        const fiberCell = row.insertCell(11);\r\n        const vitACell = row.insertCell(12);\r\n        const vitCCell = row.insertCell(13);\r\n        const calciumCell = row.insertCell(14);\r\n        const ironCell = row.insertCell(15);\r\n        const magnesiumCell = row.insertCell(16);\r\n        const potassiumCell = row.insertCell(17);\r\n\r\n        // Fill in the row with data\r\n        productNameCell.textContent = product.product_name;\r\n        brandCell.textContent = product.brands;\r\n        ingredientsCell.textContent = product.ingredients_text;\r\n        quantityCell.textContent = product.quantity;\r\n        codeCell.textContent = product.code;\r\n        energyCell.textContent = product['energy-kcal_100g'];\r\n        fatCell.textContent = product['fat_100g'];\r\n        carbsCell.textContent = product['carbohydrates_100g'];\r\n        sugarsCell.textContent = product['sugars_100g'];\r\n        proteinsCell.textContent = product['proteins_100g'];\r\n        saltCell.textContent = product['salt_100g'];\r\n        fiberCell.textContent = product['fiber_100g'];\r\n        vitACell.textContent = product['vitamin-a_100g'];\r\n        vitCCell.textContent = product['vitamin-c_100g'];\r\n        calciumCell.textContent = product['calcium_100g'];\r\n        ironCell.textContent = product['iron_100g'];\r\n        magnesiumCell.textContent = product['magnesium_100g'];\r\n        potassiumCell.textContent = product['potassium_100g'];\r\n    });\r\n}\r\n\r\n// Function to fetch news articles from the Flask server\r\nfunction fetchNews() {\r\n    const newsArticlesDiv = document.getElementById('news-articles');\r\n\r\n    newsArticlesDiv.innerHTML = '<p>Loading news...</p>';  // Show loading text\r\n\r\n    fetch('/fetch_news')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        if (data.status === 'success') {\r\n            const articles = data.articles;\r\n            updateNews(articles);\r\n        } else {\r\n            newsArticlesDiv.innerHTML = 'Error: ' + data.message;\r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.error('Error:', error);\r\n        newsArticlesDiv.innerHTML = 'An error occurred while fetching news.';\r\n    });\r\n}\r\n\r\n// Function to update the news section\r\nfunction updateNews(articles) {\r\n    const newsArticlesDiv = document.getElementById('news-articles');\r\n    newsArticlesDiv.innerHTML = '';  // Clear existing news\r\n\r\n    articles.forEach(article => {\r\n        const articleDiv = document.createElement('div');\r\n        articleDiv.classList.add('news-article');\r\n\r\n        const title = document.createElement('h3');\r\n        title.textContent = article.title;\r\n        articleDiv.appendChild(title);\r\n\r\n        const description = document.createElement('p');\r\n        description.textContent = article.description || 'No description available.';\r\n        articleDiv.appendChild(description);\r\n\r\n        newsArticlesDiv.appendChild(articleDiv);\r\n    });\r\n}\r\n\r\n// Call fetchNews() once to load initial news\r\nfetchNews();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}